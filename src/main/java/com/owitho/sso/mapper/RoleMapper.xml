<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.owitho.sso.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.owitho.sso.model.RoleInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="desc" jdbcType="VARCHAR" property="desc"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="create_by" jdbcType="INTEGER" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="INTEGER" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <select id="getUserRoles" resultMap="BaseResultMap">
    select r.id,r.name,r.desc,r.parent_id,r.create_by,r.create_time,r.update_by,r.update_time
    from sso_role r left join sso_user_role_rel ur on r.id = ur.role_id
    left join sso_user u on ur.user_id = u.id
    where u.id = #{userId}
  </select>

    <delete id="deleteUserRole">
        delete from sso_user_role_rel where user_id = #{userId} and role_id = #{roleId}
    </delete>

    <insert id="addUserRole" parameterType="com.owitho.sso.model.UserRoleRelPo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sso_user_role_rel (user_id, role_id, create_by, create_time, update_by, update_time)
        values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <delete id="deleteRolePerm">
        delete from sso_role_permission_rel where role_id = #{roleId} and permisson_id = #{permId}
    </delete>

    <insert id="addRolePerm" parameterType="com.owitho.sso.model.RolePermRelPo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sso_role_permission_rel (role_id, permisson_id, create_by, create_time, update_by, update_time)
        values (#{roleId,jdbcType=INTEGER}, #{permissionId,jdbcType=INTEGER}, #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="addRole" parameterType="com.owitho.sso.model.RoleInfo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sso_role (name,`desc`,`parent_id`,create_by, create_time, update_by, update_time)
        values (#{name,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <delete id="deleteRole">
        delete from sso_role where id = #{roleId}
    </delete>

    <update id="updateRole" parameterType="com.owitho.sso.model.RoleInfo">
        update sso_role r
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                r.desc = #{desc,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getRoleList" resultMap="BaseResultMap" parameterType="com.owitho.sso.model.RoleInfoRequest">
        select id,name,r.desc, parent_id, create_by,create_time,update_by,update_time
        from sso_role r
        <where>
            <if test="name != null and name !='' ">
                and r.name = #{name}
            </if>
            <if test="desc != null and desc !='' ">
                and r.desc like CONCAT('%', #{desc}, '%')
            </if>
        </where>
        limit #{start},#{limit}
    </select>

    <select id="countRoleList" parameterType="com.owitho.sso.model.RoleInfoRequest" resultType="java.lang.Integer">
        select count(1)
        from sso_role r
        <where>
            <where>
                <if test="name != null and name !='' ">
                    and r.value = #{value}
                </if>
                <if test="desc != null and desc !='' ">
                    and r.desc like CONCAT('%', #{desc}, '%')
                </if>
            </where>
        </where>
    </select>

    <select id="countUserRoleRel" resultType="java.lang.Integer">
        select count(1)
        from sso_user_role_rel ur
        where ur.user_id = #{userId} and ur.role_id = #{roleId}
    </select>

    <select id="countRolePermRel" resultType="java.lang.Integer">
        select count(1)
        from sso_role_permission_rel rp
        where rp.role_id = #{roleId} and rp.permisson_id = #{permId}
    </select>

    <select id="getRoleListByIds" resultMap="BaseResultMap">
        select id,name,r.desc, parent_id, create_by,create_time,update_by,update_time
        from sso_role r
        where id in
        <foreach collection="roleIds" item="roleId" index="index"
                 open="(" close=")" separator=",">
            #{roleId}
        </foreach>
    </select>

    <select id="getRoleTreeListByParentId" resultMap="BaseResultMap">
        select id,name,r.desc, parent_id, create_by,create_time,update_by,update_time
        from sso_role r
        where parent_id = #{parentId}
    </select>

    <select id="getRoleInfoByRoleId" resultMap="BaseResultMap">
        select id, r.name, r.desc, parent_id, create_by,create_time,update_by,update_time
        from sso_role r
        where id = #{roleId}
    </select>

    <delete id="deleteUserRoles">
        delete from sso_user_role_rel where user_id = #{userId}
    </delete>

    <select id="getAllRoles" resultMap="BaseResultMap">
        select id,name,r.desc, parent_id,create_by,create_time,update_by,update_time
        from sso_role r
    </select>

    <select id="getRoleListByNames" resultMap="BaseResultMap">
        select id,name,r.desc, parent_id, create_by,create_time,update_by,update_time
        from sso_role r
        where name in
        <foreach collection="roleNames" item="roleName" index="index"
                 open="(" close=")" separator=",">
            #{roleName}
        </foreach>
    </select>
</mapper>